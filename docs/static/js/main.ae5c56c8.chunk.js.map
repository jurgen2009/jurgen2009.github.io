{"version":3,"sources":["svg/Cart.svg","components/CartPage.js","svg/Backout.svg","svg/ArrowUp.svg","svg/ArrowDown.svg","svg/Dollar.svg","svg/Cart2.svg","components/login/LoginForm.jsx","components/login/SignUpForm.jsx","components/login/SuccessForm.jsx","service.js","components/login/LoginPopup.jsx","components/Header.js","svg/CardHover.svg","svg/OutOfStock.svg","components/Ð¡ategoryPage.js","utils/callAlert.js","components/ProductPage.js","components/CartPageOverlay.js","components/Bag.js","App.js","index.js"],"names":["CartPage","props","quantityCounter","x","itemsInCart","map","res","quantity","reverse","showOverlay","bind","state","data","loading","productID","quantityInCart","this","showLabels","overlay","homeContainerChange","overlayChange","contentChange","length","id","onClick","src","svgCart","alt","width","height","xmlns","fill","y","rx","textAnchor","fontSize","fontFamily","dy","d","React","Component","LoginForm","onChange","formValues","handleSubmit","validateError","Form","action","onSubmit","e","Label","basic","color","pointing","Field","htmlFor","Input","name","value","loginPhone","label","content","labelPosition","placeholder","type","Button","className","positive","icon","SignUpForm","Group","widths","control","companyName","directorName","error","i","style","display","SuccessForm","text","as","textAlign","Icon","circular","Content","registration","values","fetchOptions","method","credentials","headers","body","JSON","stringify","fetch","LoginPopup","open","dimmer","isSignUpForm","isSuccessForm","toggleForm","setState","show","close","Object","assign","target","preventDefault","then","json","resParse","status","signInObserver","console","log","signInObserver1","user","Menu","Item","Modal","size","onClose","closeIcon","Header","Description","Actions","dropDown","prevState","selectItem","item","index","selectedLabels","symbol","currentCurrency","localStorage","setItem","handlerCategoryName","updateDataName","isAuth","changeCurrency","updateUpCurrency","categories","dataC","category","total","getItem","labels","currencies","response","cat1","products","items","Set","contentState","keys","key","Number","to","ArrowUp","ArrowDown","svgBack","backgroundColor","Cart2","itemsInOrder","Dollar","CategoryPage","showProductItem","showProduct","addProductArr","addToCart","indexId","imageIndex","itemCurrency","priceForAll","price","galleryIndex","currency","categoryName","includes","onMouseOver","images","isAuthenticated","item1","stock","CardHover","OutOfStock","brand","title","message","Alert","position","effect","onShow","html","beep","timeout","ProductPage","handlerGallery","updateGallery","window","scrollTo","callAlert","parse","description","CartPageOverlay","closeOverlay","handlerIncreaseQuantity","increaseQuantity","handlerDecreaseQuantity","decreaseQuantity","handlerCheckout","removeItem","attributesFull","amountToPay","undefined","stopPropagation","thumbnail","toFixed","handlerOpenMyBag","document","location","reload","disabled","Bag","addCartToOrder","itemInOrder","push","sendToOrder","arrowRight","bagArrowRight","arrowLeft","bagArrowLeft","forceUpdate","stroke","strokeLinecap","strokeLinejoin","viewBox","gallery","prices","image","priceForOne","strokeWidth","App","arr","updatedCart","updatedItemIndex","findIndex","updatedItem","imgControl","setTimeout","dataId","splice","a","homeContainerState","data1","Switch","Route","exact","path","render","updateAttributesItemId","updateAttributesItemIdSwatch","updateAttributesItemIdAdd1","updateAttributesItemIdAdd2","attributesItemIdAdd1","attributesItemIdAdd2","stack","limit","spacing","offset","customHistory","createBrowserHistory","ReactDOM","Router","history","getElementById"],"mappings":"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","file":"static/js/main.ae5c56c8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Cart.1efb4f6c.svg\";","import React from 'react'\r\nimport svgCart from '../svg/Cart.svg';\r\n\r\n\r\nclass CartPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.showOverlay = this.showOverlay.bind(this);\r\n\r\n        this.state = {\r\n            data: null,\r\n            loading: true,\r\n            productID: null,\r\n            quantityInCart: 1,\r\n            itemsInCart:[],\r\n        }\r\n    }\r\n\r\n    showOverlay() {if(this.props.showLabels === false)\r\n       if (this.props.overlay === 'overlayClosed')\r\n            {   this.props.homeContainerChange('homeContainerOpened')\r\n                this.props.overlayChange('overlayOpened')\r\n                this.props.contentChange('contentFixed')\r\n            } else\r\n            {\r\n                this.props.homeContainerChange('homeContainerClosed')\r\n                this.props.overlayChange('overlayClosed')\r\n                this.props.contentChange('content')\r\n            }\r\n    }\r\n\r\n    quantityCounter=() => {\r\n        let x\r\n        return this.props.itemsInCart.map(res=>x+=res.quantity, x=0).reverse()[0]\r\n    }\r\n\r\n    render() {return this.props.itemsInCart.length===0 ?\r\n        (<div id=\"cart\">\r\n                   <div onClick={() =>\r\n                   {this.showOverlay()}}><img src={svgCart} alt={\"logo\"}/></div>\r\n            </div>) :  (<div id=\"cart\">\r\n            <div onClick={() =>\r\n            {this.showOverlay()}}>\r\n                    <svg width=\"31\" height=\"29\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\">\r\n                        <rect\r\n                            id=\"svg_1\" fill=\"black\" y=\"0\" x=\"11\" rx=\"10\" height=\"20\" width=\"20\"/>\r\n                        <text x=\"21\" y=\"10\" textAnchor=\"middle\" fill=\"white\" fontSize=\"10px\" fontFamily=\"Arial\" dy=\".3em\">{this.quantityCounter()}</text>\r\n                        <path id=\"svg_2\" fill=\"#43464E\" d=\"m19.561,14.8736c-0.379,-0.4633 -0.969,-0.7449 -1.579,-0.7449l-12.823,0l-0.4,-1.4897c-0.232,-0.866 -1.031,-1.4701 -1.958,-1.4701l-2.148,0c-0.358,0 -0.653,0.2816 -0.653,0.6246c0,0.3421 0.294,0.6245 0.653,0.6245l2.148,0c0.316,0 0.589,0.2014 0.673,0.5034l2.569,9.7863c0.232,0.866 1.032,1.4701 1.959,1.4701l8.401,0c0.926,0 1.748,-0.6041 1.958,-1.4701l1.579,-6.202c0.148,-0.5647 0.022,-1.1688 -0.379,-1.6321l0,0zm-0.904,1.3489l-1.58,6.202c-0.084,0.302 -0.358,0.5034 -0.673,0.5034l-8.402,0c-0.316,0 -0.59,-0.2014 -0.674,-0.5034l-1.832,-7.0269l12.487,0c0.211,0 0.421,0.1006 0.548,0.2619c0.126,0.1604 0.188,0.3618 0.126,0.5632l0,-0.0002z\"/>\r\n                        <path id=\"svg_3\" fill=\"#43464E\" d=\"m8.444,24.9816c-1.2,0 -2.189,0.9463 -2.189,2.0938c0,1.1474 0.989,2.0937 2.189,2.0937c1.2,0.0007 2.19,-0.9455 2.19,-2.0931c0,-1.1477 -0.99,-2.0946 -2.19,-2.0946l0,0.0002zm0,2.9197c-0.484,0 -0.863,-0.3626 -0.863,-0.8259c0,-0.4632 0.379,-0.8259 0.863,-0.8259c0.485,0 0.864,0.3627 0.864,0.8259c-0.001,0.4436 -0.401,0.8259 -0.864,0.8259z\"/>\r\n                        <path id=\"svg_4\" fill=\"#43464E\" d=\"m15.688,24.9814c-1.201,0 -2.19,0.9463 -2.19,2.0938c0,1.1474 0.99,2.0937 2.19,2.0937c1.2,0 2.189,-0.9463 2.189,-2.0937c-0.021,-1.1468 -0.989,-2.0938 -2.189,-2.0938zm0,2.9197c-0.485,0 -0.864,-0.3626 -0.864,-0.8259c0,-0.4632 0.379,-0.8259 0.864,-0.8259c0.484,0 0.863,0.3627 0.863,0.8259c0,0.4436 -0.4,0.8259 -0.863,0.8259z\"/>\r\n                    </svg>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n        )}\r\n}\r\nexport default CartPage","export default __webpack_public_path__ + \"static/media/Backout.a06b8798.svg\";","export default __webpack_public_path__ + \"static/media/ArrowUp.22c7531e.svg\";","export default __webpack_public_path__ + \"static/media/ArrowDown.85a78ce5.svg\";","export default __webpack_public_path__ + \"static/media/Dollar.60a0215d.svg\";","export default __webpack_public_path__ + \"static/media/Cart2.5d9329b9.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button, Label } from 'semantic-ui-react';\n\nconst LoginForm = ({ onChange, formValues, handleSubmit, validateError = false }) => {\n\treturn (\n\t\t<div>\n\t\t\t<Form action=\"#\" onSubmit={(e) => handleSubmit(e, 'login')}>\n\t\t\t\t{validateError && <Label basic color='red' pointing='below'>{validateError}</Label>}\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label htmlFor=\"loginPhone\">Login</label>\n\t\t\t\t\t<Input name=\"loginPhone\" value={formValues.loginPhone || ''} onChange={onChange} label={{ content: '+442' }} labelPosition='left' placeholder='291234567' />\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label htmlFor=\"password\">Password</label>\n\t\t\t\t\t<Input name=\"password\" type=\"password\" onChange={onChange} placeholder='enter password' />\n\t\t\t\t</Form.Field>\n\t\t\t\t<Button\n\t\t\t\t\ttype='submit'\n\t\t\t\t\tclassName=\"signUpButton\"\n\t\t\t\t\tpositive\n\t\t\t\t\ticon='send'\n\t\t\t\t\tlabelPosition='left'\n\t\t\t\t\tcontent={'Submit'}\n\t\t\t\t/>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nLoginForm.propTypes = {\n\tonChange: PropTypes.func.isRequired,\n\tformValues: PropTypes.object.isRequired,\n\thandleSubmit: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button, Label } from 'semantic-ui-react';\n\nconst SignUpForm = ({ onChange, formValues, handleSubmit, validateError = false }) => {\n\treturn (\n\t\t<Form action=\"#\" onSubmit={(e) => handleSubmit(e, 'reg')}>\n\t\t\t<Form.Group widths='equal'>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label htmlFor=\"loginPhone\">Login</label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tname=\"loginPhone\"\n\t\t\t\t\t\tvalue={formValues.loginPhone || ''}\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\tlabel={{ content: '+442' }}\n\t\t\t\t\t\tlabelPosition='left'\n\t\t\t\t\t\tplaceholder='072862288'\n\t\t\t\t\t/>\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field control={Input} value={formValues.companyName || ''} onChange={onChange} name=\"address\" label='address' placeholder='London, 18 Abbey Rd' />\n\t\t\t</Form.Group>\n\t\t\t<Form.Group widths='equal'>\n\t\t\t\t<Form.Field control={Input} value={formValues.directorName || ''} onChange={onChange} name=\"Name\" label='Name' placeholder='John Doe' />\n\t\t\t</Form.Group>\n\t\t\t<Form.Field type=\"password\" onChange={onChange} name=\"password\" control={Input} label='password' placeholder='enter password' />\n\t\t\t<Form.Field type=\"password\" onChange={onChange} name=\"secondPassword\" control={Input} label='password check' placeholder='repeat password' />\n\t\t\t{validateError &&\n\t\t\t<Label basic color='red' pointing>{validateError.map(\n\t\t\t\t(error, i) => <div key={i}>{error}</div>\n\t\t\t)}</Label>}\n\t\t\t<Button\n\t\t\t\ttype='submit'\n\t\t\t\tclassName=\"signUpButton\"\n\t\t\t\tpositive\n\t\t\t\ticon='signup'\n\t\t\t\tlabelPosition='right'\n\t\t\t\tcontent={'Registration'}\n\t\t\t\tstyle={{ display: 'block' }}\n\t\t\t/>\n\t\t</Form>\n\t);\n};\n\nSignUpForm.propTypes = {\n\tonChange: PropTypes.func.isRequired,\n\tformValues: PropTypes.object.isRequired,\n\thandleSubmit: PropTypes.func.isRequired,\n};\n\nexport default SignUpForm;\n","import React from 'react';\nimport { Header, Icon } from 'semantic-ui-react';\n\nconst SuccessForm = ({ text }) => {\n\treturn (\n\t\t<div>\n\t\t\t<Header as='h2' icon textAlign='center'>\n\t\t\t\t<Icon name='checkmark' circular />\n\t\t\t\t<Header.Content>\n\t\t\t\t\t{text}\n\t\t\t\t</Header.Content>\n\t\t\t</Header>\n\t\t</div>\n\t);\n};\n\nexport default SuccessForm;\n","export function registration (values) {\n\tlet url = '/api/register';\n\tlet fetchOptions = {\n\t\tmethod: 'POST',\n\t\tcredentials: 'same-origin',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify(values),\n\t};\n\treturn fetch(url, fetchOptions);\n}\n\nexport function login (values) {\n\tlet url = '/api/login';\n\tlet fetchOptions = {\n\t\tmethod: 'POST',\n\t\tcredentials: 'same-origin',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify(values),\n\t};\n\treturn fetch(url, fetchOptions);\n}\n\nexport function createUser (values) {\n\tlet url = '/api/createUser';\n\tlet fetchOptions = {\n\t\tmethod: 'POST',\n\t\tcredentials: 'include',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify(values),\n\t};\n\treturn fetch(url, fetchOptions);\n}\n\nexport function deleteUser (userId) {\n\treturn fetch(`/api/getUser/${userId}`, {\n\t\tmethod: 'DELETE',\n\t\tcredentials: 'include',\n\t});\n}\n\nexport function getUser (id) {\n\tlet url = `/api/getUser/${id}`;\n\treturn fetch(url, { credentials: 'include' });\n}\n\nexport function setNewPassword (userId, newPassword, newPassword2) {\n\tlet url = `/api/setNewPassword/${userId}`;\n\tlet fetchOptions = {\n\t\tmethod: 'POST',\n\t\tcredentials: 'include',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify({ userId, newPassword, newPassword2 }),\n\t};\n\treturn fetch(url, fetchOptions);\n}\n\nexport function setPassByUser (newPassword, newPassword2) {\n\tlet url = '/api/setPassByUser';\n\tlet fetchOptions = {\n\t\tmethod: 'POST',\n\t\tcredentials: 'include',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify({ newPassword, newPassword2 }),\n\t};\n\treturn fetch(url, fetchOptions);\n}\n\nexport function setNewValues (userId, values) {\n\tlet url = `/api/setNewValues/${userId}`;\n\tlet fetchOptions = {\n\t\tmethod: 'POST',\n\t\tcredentials: 'include',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify(values),\n\t};\n\treturn fetch(url, fetchOptions);\n}\n\nexport function updateVerication (userId, value) {\n\tlet url = '/api/updateVerication';\n\tlet fetchOptions = {\n\t\tmethod: 'POST',\n\t\tcredentials: 'include',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify({ userId, value }),\n\t};\n\treturn fetch(url, fetchOptions);\n}\n\nexport function changeUserProfile (values) {\n\tconst url = '/api/changeUserProfile';\n\tconst fetchOptions = {\n\t\tmethod: 'POST',\n\t\tcredentials: 'include',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify(values),\n\t};\n\treturn fetch(url, fetchOptions);\n}\n\nexport function usersList () {\n\tlet url = '/api/usersList';\n\treturn fetch(url, { credentials: 'include' });\n}\n\n\nexport function deleteFile (fileId) {\n\treturn fetch(`/api/getFile/${fileId}`, {\n\t\tmethod: 'DELETE',\n\t\tcredentials: 'include',\n\t});\n}\n\n\nexport function handleronSubmit (id) {\n\tlet url = `/api/updateMessage/${id}`;\n\tlet fetchOptions = {\n\t\tmethod: 'POST',\n\t\tcredentials: 'include',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t};\n\treturn fetch(url, fetchOptions);\n}\n\n\n\n","import React, { Component } from 'react';\nimport { Menu, Modal } from 'semantic-ui-react';\n\nimport LoginForm from './LoginForm';\nimport SignUpForm from './SignUpForm';\nimport SuccessForm from './SuccessForm';\n\nimport { registration } from '../../service';\n\nclass LoginPopup extends Component {\n\tstate = {\n\t\topen: false,\n\t\tdimmer: 'blurring',\n\t\tisSignUpForm: false,\n\t\tisSuccessForm: false,\n\t\tformValues: {},\n\t\tvalidateError: false,\n\t}\n\n\ttoggleForm = () => this.setState({ isSignUpForm: true, validateError: false });\n\tshow = () => this.setState({ open: true });\n\tclose = () => {\n\t\treturn this.setState({ open: false, isSignUpForm: false, validateError: false, isSuccessForm: false });\n\t}\n\tonChange = (e) => {\n\t\tthis.setState({ formValues: Object.assign(this.state.formValues, { [e.target.name]: e.target.value }) });\n\t};\n\n\thandleSubmit = (e, action) => {\n\t\te.preventDefault();\n\t\tif (action === 'reg') {\n\t\t\treturn registration(this.state.formValues).then(res => res.json().then(resParse => {\n\t\t\t\tif (resParse.error) {\n\t\t\t\t\treturn this.setState({ validateError: resParse.value });\n\t\t\t\t} else if (res.status !== 200) {\n\t\t\t\t\treturn this.setState({ validateError: [resParse] });\n\t\t\t\t} else {\n\t\t\t\t\tthis.props.signInObserver(true, resParse);\n\t\t\t\t\treturn this.setState({ isSuccessForm: 'Registration successful!' });\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t\tif (action === 'login') {\n\t\t\tthis.setState({ validateError: false });\n\t\t\tconsole.log(this.state.formValues)\n\t\t\t\tif (this.state.formValues !== null) {\n\t\t\t\t\tthis.props.signInObserver1(true, this.state.formValues.loginPhone);\n\t\t\t\t\tthis.setState({ isSuccessForm: 'Authentication successful!' });\n\t\t\t\t}\n\t\t\t\tthis.setState({ validateError: this.state.formValues.loginPhone});\n\n\t\t}\n\t}\n\n\trender () {\n\t\tconst { open, dimmer, isSignUpForm, isSuccessForm, formValues, validateError } = this.state;\n\n\t\tconst loginButton = () => {\n\t\t\tlet user = this.props.user;\n\t\t\tif (user) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\treturn <Menu.Item name=\"login\" onClick={this.show}>Login</Menu.Item>;\n\t\t\t}\n\t\t};\n\n\t\tconst form = () => {\n\t\t\tif (isSuccessForm) {\n\t\t\t\treturn <SuccessForm text={this.state.isSuccessForm} />;\n\t\t\t}\n\t\t\tif (isSignUpForm) {\n\t\t\t\treturn <SignUpForm onChange={this.onChange} handleSubmit={this.handleSubmit} formValues={formValues} validateError={validateError} />;\n\t\t\t} else {\n\t\t\t\treturn <LoginForm onChange={this.onChange} handleSubmit={this.handleSubmit} formValues={formValues} validateError={validateError} />;\n\t\t\t}\n\t\t};\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{loginButton()}\n\t\t\t\t<Modal size={isSignUpForm ? 'tiny' : 'mini'} dimmer={dimmer} open={open} onClose={this.close} closeIcon>\n\t\t\t\t\t<Modal.Header className=\"text-center\">{isSignUpForm ? 'Registration (disabled)' : 'Authentication (database is disabled, you can type any values to login)'}</Modal.Header>\n\t\t\t\t\t<Modal.Content>\n\t\t\t\t\t\t<Modal.Description>\n\t\t\t\t\t\t\t{ form() }\n\t\t\t\t\t\t</Modal.Description>\n\t\t\t\t\t</Modal.Content>\n\t\t\t\t\t<Modal.Actions>\n\t\t\t\t\t\t{!isSignUpForm &&\n\t\t\t\t\t\t\t!isSuccessForm &&\n\t\t\t\t\t\t\t<div className=\"text-center form-switcher\">\n\t\t\t\t\t\t\t\t<div className=\"modalTextUI\"><h4>No account?</h4></div><br/>\n\t\t\t\t\t\t\t\t<div className=\"modalButtonUI\"> <button className=\"ui inverted green button\" onClick={this.toggleForm}> Registration </button> </div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Modal.Actions>\n\t\t\t\t</Modal>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default LoginPopup;\n","import React from 'react';\r\nimport '../App.js'\r\nimport CartPage from \"./CartPage\";\r\nimport svgBack from '../svg/Backout.svg';\r\nimport Link from \"react-router-dom/Link\";\r\nimport ArrowUp from \"../svg/ArrowUp.svg\";\r\nimport ArrowDown from \"../svg/ArrowDown.svg\";\r\nimport Dollar from \"../svg/Dollar.svg\";\r\nimport Cart2 from \"../svg/Cart2.svg\";\r\nimport LoginPopup from \"./login/LoginPopup\";\r\n\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handlerCategoryName = this.handlerCategoryName.bind(this)\r\n        this.changeCurrency = this.changeCurrency.bind(this)\r\n        this.homeContainerChange = this.homeContainerChange.bind(this) // needed for bind function with the context of this component, otherwise this function doesn't get props\r\n        this.overlayChange = this.overlayChange.bind(this)\r\n        this.contentChange = this.contentChange.bind(this)\r\n        this.state = {\r\n            categories: [],\r\n            dataC: [],\r\n            loading: true,\r\n            category: null,\r\n            total: 0.00,\r\n            itemsInCart: this.props.itemsInCart,\r\n            currentCurrency: localStorage.getItem('currentCurrency')===null ? 0 : localStorage.getItem('currentCurrency'),\r\n            labels: [],\r\n            showLabels: false,\r\n            selectedLabels: localStorage.getItem('selectedCurrency')===null ? \"$\" : localStorage.getItem('selectedCurrency'),\r\n            overlay:'overlayClosed',\r\n            homeContainerChange: 'homeContainerClosed',\r\n            contentChange: 'content',\r\n            currencies: [{id:0, label: 'USD', symbol: '$'},{id:1, label: 'GBP', symbol: 'Â£'},{id:2, label: 'AUD', symbol: 'A$'},\r\n                {id:3, label: 'JPY', symbol: 'Â¥'},{id:4, label: 'RUB', symbol: 'â½'}]\r\n        } }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        fetch('https://dummyjson.com/products')\r\n            .then(res => res.json())\r\n            .then((response) => {\r\n                let cat1=response.products.map(items => items.category)\r\n                let categories = [...new Set(cat1)];\r\n                console.log(categories)\r\n\r\n                this.setState({ categories: categories, loading: false })\r\n            })\r\n    }\r\n\r\n\r\n    dropDown = () => {if(this.props.overlay !== 'overlayOpened')\r\n        this.setState(prevState => ({\r\n            showLabels: !prevState.showLabels}\r\n        ));\r\n    };\r\n\r\n    selectItem =   (item, index) =>  {\r\n         this.setState({\r\n            selectedLabels: item.symbol,\r\n            showLabels: false,\r\n            currentCurrency: index\r\n        });\r\n        localStorage.setItem('currentCurrency', (index))\r\n        localStorage.setItem('selectedCurrency', (item.symbol))\r\n    };\r\n\r\n    handlerCategoryName = (index) => { this.props.updateDataName(index)}\r\n\r\n\r\n    signInObserver1 = (isAuth, user) => {\r\n        console.log(user)\r\n        this.props.signInObserver(isAuth, user)\r\n    }\r\n\r\n\r\n    changeCurrency = (value) => {\r\n        this.props.updateUpCurrency(value)}\r\n\r\n    homeContainerChange () {if (this.props.overlay === 'overlayOpened'){\r\n        this.props.homeContainerChange('homeContainerClosed')} else {\r\n        this.props.homeContainerChange('homeContainerOpened')}}\r\n\r\n    overlayChange () {if (this.props.overlay === 'overlayOpened'){\r\n        this.props.overlayChange('overlayClosed')} else {\r\n        this.props.overlayChange('overlayOpened')}}\r\n\r\n    contentChange () {if (this.props.contentState === 'contentFixed'){\r\n        this.props.contentChange('content')} else {\r\n        this.props.contentChange('contentFixed')}}\r\n\r\n    render() {\r\n        let dataA = Object.keys(this.state.dataC).map((key) => [Number(key), this.state.dataC[key]])\r\n        // currency fetched object to array\r\n        const {loading, currencies} = this.state\r\n        console.log(currencies)\r\n        if (loading) return \"Loading...\";\r\n        return (\r\n            <header>\r\n\r\n                <ul id=\"nav\">\r\n{                    this.state.categories.map((item, index) => (\r\n                        <li key={item}><Link to={`/${item}`} className=\"label\" key={index} onClick={() =>\r\n                        {this.handlerCategoryName(item)}}>\r\n                            {item}</Link></li>\r\n                    ))}\r\n\r\n                    <button className=\"buttonSelectBox\">\r\n                        <div className=\"select-box--box\">\r\n                            <div className=\"select-box--container\">\r\n                                <div className=\"select-box--selected-item\">\r\n                                    {this.state.selectedLabels}\r\n                                </div>\r\n                                <div className=\"select-box--arrow\" onClick={this.dropDown}>\r\n                                    <img src={`${\r\n                                        this.state.showLabels\r\n                                            ? ArrowUp\r\n                                            : ArrowDown\r\n                                    }`} alt=\"\"/>\r\n\r\n                                </div>\r\n\r\n                                <div\r\n                                    style={{ display: this.state.showLabels ? \"block\" : \"none\" }}\r\n                                    className={\"select-box--items\"}\r\n                                >\r\n                                    {currencies.map((item, index) => (\r\n                                        <div\r\n                                            key={item.id}\r\n\r\n                                            onClick={() =>  {this.selectItem(item, index); this.changeCurrency(index)}}\r\n                                            className={this.state.selectedLabels === item ? \"selected\" : \"\"}\r\n                                        >\r\n                                            {item.symbol}{' '}{item.label}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n\r\n\r\n                <div className=\"backOutButton\">\r\n                    <Link to={`/`} id=\"backout-button\">\r\n                        <img src={svgBack} alt={\"logo\"}/>\r\n                    </Link>\r\n\r\n                </div>\r\n                <div className=\"checkOut\">\r\n\r\n                    {this.props.user ===null ?\r\n                    <button className=\"ui inverted green button\">\r\n                        <LoginPopup\r\n                            user={this.props.user}\r\n                            signInObserver1={this.signInObserver1} />\r\n                    </button> :\r\n                    <div className=\"checkOutTotal\">\r\n                        <CartPage\r\n                            itemsInCart={this.props.itemsInCart}\r\n                            showLabels={this.state.showLabels}\r\n                            homeContainerChange={this.homeContainerChange}\r\n                            overlayChange={this.overlayChange}\r\n                            contentChange={this.contentChange}\r\n                            overlay={this.props.overlay}\r\n                        />\r\n\r\n\r\n                    </div>}\r\n\r\n                </div></ul>\r\n\r\n                <div className=\"progressBar\">\r\n\r\n                    <div className=\"progressBar1\"\r\n    style={{backgroundColor: this.props.itemsInCart.length > 0 ?  '#5ECE7B' :  'white'}}\r\n                    ><img src={`${\r\n                        this.props.itemsInCart.length > 0\r\n                            ? Cart2\r\n                            : 'none'\r\n                    }`} alt=\"\"/></div>\r\n                    <div className=\"progressBar2\"\r\n    style={{backgroundColor: this.props.itemsInOrder.length > 0 ?  '#5ECE7B' :  'white'}}\r\n                    ><img src={`${\r\n                        this.props.itemsInOrder.length > 0\r\n                            ? Dollar\r\n                            : 'none'\r\n                    }`} alt=\"\"/></div>\r\n                    <div className=\"progressBar3\"\r\n\r\n                    />\r\n                    <div className=\"progressBar4\"\r\n\r\n                    />\r\n                    </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\nexport default Header\r\n","export default __webpack_public_path__ + \"static/media/CardHover.fed9eb10.svg\";","export default __webpack_public_path__ + \"static/media/OutOfStock.8fd89e8e.svg\";","import React from 'react';\r\nimport Link from \"react-router-dom/Link\";\r\nimport CardHover from \"../svg/CardHover.svg\";\r\nimport OutOfStock from \"../svg/OutOfStock.svg\";\r\n\r\nclass CategoryPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: null,\r\n            loading: true,\r\n            productID: '0',\r\n            category: null,\r\n            galleryIndex: 0,\r\n            itemsInCart:[],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        fetch('https://dummyjson.com/products')\r\n            .then(res => res.json())\r\n            .then((response) => {\r\n            this.setState({ data: response, loading: false })\r\n                })\r\n    }\r\n\r\n\r\n\r\n\r\n    showProductItem=(id)=>{\r\n        console.log(id)\r\n        this.props.showProduct(id)\r\n    }\r\n\r\n    addProductArr = () => {\r\n        console.log(this.state.data.products[0])\r\n        console.log(this.props.productID)\r\n\r\n       this.props.addToCart(\r\n            (this.props.productID) ? {\r\n\r\n                indexId: this.props.itemsInCart.length,\r\n                data: this.state.data.products[this.props.productID-1],\r\n                quantity: 1,\r\n                imageIndex: 0,\r\n                itemCurrency: this.props.currencies[this.props.currentCurrency].symbol,\r\n                priceForAll: this.state.data.products[this.props.productID-1].price,\r\n\r\n\r\n            } : null)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const {loading, data} = this.state\r\n        if (loading) return \"Loading...\";\r\n        let currency = this.props.currencies[this.props.currentCurrency]\r\n\r\n/*        data.products.sort((a, b) => {\r\n             const nameA = a.title.toUpperCase();\r\n             const nameB = b.title.toUpperCase();\r\n             if (nameA < nameB) {\r\n                 return -1;\r\n             }\r\n             if (nameA > nameB) {\r\n                 return 1;\r\n            }\r\n             return 0;\r\n         })*/\r\n\r\n        return (\r\n                <div className={this.props.contentState}>\r\n                    <div className=\"contentCategoryName\">{this.props.categoryName}</div>\r\n                    <ul className=\"contentUnorderedCards\" >\r\n                       {data.products.map((item, index) => item.category.includes(this.props.categoryName) ? (\r\n\r\n                            <li className=\"contentListCards\"  key={index} >\r\n                                <div className=\"contentCard\"\r\n                                >\r\n                                <Link to={`/product/${item.id}`}><img\r\n                                    className=\"contentImg\"\r\n                                  onMouseOver={() =>\r\n                                { this.showProductItem(item.id)}}\r\n\r\n                                    key={item.id}\r\n                                    src={item.images[0]}\r\n                                    alt={\"logo\"}/>\r\n                                </Link>\r\n                                    {console.log(this.props.isAuthenticated)}\r\n                                    {console.log(this.props.isAuthenticated !== false)}\r\n                                    {this.props.isAuthenticated !== false ?   data.products.map(item1 => item1.id===this.props.productID ? item1.stock > 30 ?\r\n                                        <img className=\"cardHoverSvg\"  src={CardHover} alt={\"logo\"}\r\n                                             onClick={() =>\r\n                                             { this.addProductArr()}}\r\n                                        />:\r\n                                            <Link className=\"OutOfStock\" to={`/product/${item.id}`}>\r\n                                                <img src={OutOfStock} alt={\"logo\"}/>\r\n                                            </Link>: null\r\n                                    ): null}\r\n                                <div className=\"contentTextName\"\r\n                                    onMouseOver={() =>\r\n                                { this.showProductItem(item.id)}}\r\n                                >\r\n                                    {item.brand}</div>\r\n                            <div className=\"contentTextName\"\r\n                                onMouseOver={() =>\r\n                            { this.showProductItem(item.id)}}\r\n                            >\r\n                                {item.title}</div>\r\n                                <div className=\"contentTextPrice\"\r\n                                     onMouseOver={() =>\r\n                                { this.showProductItem(item.id)}}\r\n                                >{item.price}{' '}{currency.symbol}\r\n                                </div>\r\n                            </div>\r\n                            </li>\r\n                        ): null )}\r\n                    </ul>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CategoryPage\r\n\r\n","import Alert from 'react-s-alert';\r\n\r\nexport default (type, message) => {\r\n    return Alert[type](`<span>${message}</span>`, {\r\n        position: 'top-right',\r\n        effect: 'bouncyflip',\r\n        onShow: function () {\r\n\r\n        },\r\n        html: true,\r\n        beep: false,\r\n        timeout: 3000,\r\n    });\r\n};\r\n","import React from 'react';\r\nimport parse from 'html-react-parser';\r\nimport callAlert from \"../utils/callAlert\";\r\n\r\nclass ProductPage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.handlerGallery = this.handlerGallery.bind(this)\r\n        this.state = {\r\n            data: [],\r\n            loading: true,\r\n            category: null,\r\n            galleryIndex: 0,\r\n            itemsInCart:[],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        fetch('https://dummyjson.com/products')\r\n            .then(res => res.json())\r\n            .then((response) => {\r\n                this.setState({ data: response.products[this.props.productID-1], loading: false })\r\n            })\r\n        window.scrollTo(0, 0)\r\n\r\n    }\r\n\r\n    handlerGallery = (index)=> {\r\n        this.setState({ galleryIndex: index })\r\n        this.props.updateGallery(index)}\r\n\r\n/*    handlerAttributesItem = (id)=> {if (this.props.attributesItemId!==id)\r\n    {this.setState({ attributesItemId: id })\r\n        this.props.updateAttributesItemId(id)}}\r\n\r\n    handlerAttributesItemSwatch = (id)=> {if (this.props.attributesItemIdSwatch!==id)\r\n    {this.setState({ attributesItemIdSwatch: id })\r\n        this.props.updateAttributesItemIdSwatch(id)}}\r\n\r\n    handlerAttributesItemAdd1 = (id)=> {if (this.props.attributesItemIdAdd1!==id)\r\n    {this.setState({ attributesItemIdAdd1: id })\r\n        this.props.updateAttributesItemIdAdd1(id)}}\r\n\r\n    handlerAttributesItemAdd2 = (id)=> {if (this.props.attributesItemIdAdd2!==id)\r\n    {this.setState({ attributesItemIdAdd2: id })\r\n        this.props.updateAttributesItemIdAdd2(id)}}*/\r\n\r\n    addProductArr = () => {\r\n        this.props.addToCart(\r\n            (this.props.productID) ? {\r\n                indexId: this.props.itemsInCart.length,\r\n                data: this.state.data,\r\n                quantity: 1,\r\n                imageIndex: 0,\r\n                itemCurrency: this.props.currencies[this.props.currentCurrency].symbol,\r\n                priceForAll: this.state.data.price,\r\n\r\n            } : null)\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {loading, data} = this.state\r\n        console.log(data)\r\n        if (loading) return \"Loading...\";\r\n        console.log(data.images)\r\n        let currency = this.props.currencies[this.props.currentCurrency]\r\n\r\n\r\n        if (this.props.productID!==null) {\r\n            return (\r\n                <div>\r\n                    <div className=\"product\">\r\n\r\n                        <ul id=\"galleryList\" className=\"galleryList\">{data.images.map((item, index)=>\r\n                            ( <li key={index} onClick={() => {this.handlerGallery(index)}}>\r\n                                <img className=\"galleryListImg\" key={index} src={item} alt={\"logo\"} style={index === 0 ?\r\n                                    {display:'none'} : {}}  />\r\n                            </li>))}</ul>\r\n                        <div className=\"galleryItem\">\r\n                            <div className=\"galleryItemImg\">\r\n                                <img src={data.images[this.props.galleryIndex]} alt={\"logo\"} />\r\n                            </div>\r\n                            <div className=\"galleryAddInfo\">\r\n                                <span className=\"attributesItemName\">{data.title}</span>\r\n                                <br/>\r\n{/*                                <span className=\"attributesItemType\">{data.product.attributes.map((item1)=>{\r\n                                    if (item1.type !== 'swatch' && item1.id !== 'With USB 3 ports' && item1.id !== 'Touch ID in keyboard')\r\n                                    {return item1.id+\":\"} else {return null}})}</span>\r\n                                <div className=\"galleryAttributes\">\r\n                                    {data.product.attributes.map((item1)=>item1.type==='text' && item1.id !=='With USB 3 ports' && item1.id !=='Touch ID in keyboard' ?\r\n                                        item1.items.map(item2=>{\r\n                                            return this.state.attributesItemId!==null ? (<div className={this.state.attributesItemId===item2.id ? \"attributesItemClicked\":\"attributesItem\" } key={item2.id}\r\n                                                                                              onClick={() =>\r\n                                                                                              {this.handlerAttributesItem(item2.id)}}>\r\n                                                    <span className=\"attributesItemText\">{item2.value}</span>\r\n                                                </div>) :\r\n                                                (<div className=\"attributesItem\" key={item2.id}  onClick={() =>\r\n                                                {this.handlerAttributesItem(item2.id)}}>\r\n                                                    <span className=\"attributesItemText\">{item2.value}</span>\r\n                                                </div>)\r\n                                        }) : null) }\r\n                                    <br/>\r\n                                </div>\r\n                                <span className=\"attributesItemSwatchType\">\r\n                                {data.product.attributes.map((item1, index)=> {if (item1.type === 'swatch'|| item1.id==='With USB 3 ports')\r\n                                {return item1.id+\":\"} else {return null}})}</span>\r\n                                <div className=\"galleryAttributesSwatch\">\r\n\r\n                                    {data.product.attributes.map((item1)=>(item1.type==='swatch') ? item1.items.map(item2=>{\r\n\r\n                                            return this.state.attributesItemIdSwatch!==null ? (<div className=\"attributesItemSwatchSelected\" key={item2.id}\r\n                                                                                                    style={this.state.attributesItemIdSwatch === item2.id ?\r\n                                                                                                        {   backgroundColor: item2.id,\r\n                                                                                                            outlineStyle: 'solid',\r\n                                                                                                            outlineColor: 'lawngreen',\r\n                                                                                                            outlineOffset: '2px',\r\n                                                                                                            outlineWidth: '2px'\r\n                                                                                                        } : {backgroundColor: item2.id}} onClick={() => {\r\n                                                this.handlerAttributesItemSwatch(item2.id)\r\n                                            }}/>) : (<div className=\"attributesItemSwatch\" key={item2.id}  style={{backgroundColor: item2.id}} onClick={() =>\r\n                                            {this.handlerAttributesItemSwatch(item2.id)}}>{\"\"}</div>)\r\n                                        }) : null\r\n                                    )}\r\n                                    <br/>\r\n                                </div>\r\n                                <div className=\"galleryAttributesAdd1\">\r\n                                    {data.product.attributes.map((item1)=>(item1.id.includes(\"USB\"))  ? item1.items.map(item2=>{\r\n                                        return this.state.attributesItemIdAdd1 !==null ?\r\n                                            (<div className={this.state.attributesItemIdAdd1===item2.id ? \"attributesItemAdd1Clicked\":\"attributesItemAdd1\"} key={item2.id}\r\n                                                  onClick={() => {this.handlerAttributesItemAdd1(item2.id)}}>\r\n                                                <div className=\"attributesItemText\">{item2.id}</div>\r\n                                            </div>) : (<div className=\"attributesItemAdd1\" key={item2.id}  onClick={() =>\r\n                                            {this.handlerAttributesItemAdd1(item2.id)}}><span className=\"attributesItemText\">{item2.id}</span></div>)}) : null) }\r\n                                    <br/>\r\n                                </div>\r\n\r\n                                <div className=\"galleryAttributesAdd2\">\r\n                                    <div className=\"galleryAttributesAdd2Caption\"><span className=\"attributesItemType\">\r\n                                        {data.product.attributes.map((item1, index)=>{if (index === 2) {return item1.id+\":\"} else {return null}})}</span></div>\r\n                                    {data.product.attributes.map((item1)=>(item1.id.includes(\"USB\"))  ? item1.items.map(item2=>{\r\n                                        return this.state.attributesItemIdAdd2 !==null ?\r\n                                            (<div className={this.state.attributesItemIdAdd2===item2.id ? \"attributesItemAdd2Clicked\":\"attributesItemAdd2\"} key={item2.id}\r\n                                                  onClick={() => {this.handlerAttributesItemAdd2(item2.id)}}>\r\n                                                <span className=\"attributesItemText\">{item2.id}</span>\r\n                                            </div>) : (<div className=\"attributesItemAdd2\" key={item2.id}  onClick={() =>\r\n                                            {this.handlerAttributesItemAdd2(item2.id)}}><span className=\"attributesItemText\">{item2.id}</span></div>)}) : null) }\r\n                                    <br/>\r\n                                </div>*/}\r\n\r\n                                <div className=\"galleryAddInfoPrice\">\r\n                                    {\"PRICE: \"}{data.price}{' '}{currency.symbol} </div>\r\n                                <div className=\"galleryAddInfoPriceNumbers\">\r\n                                  {/*  {data.prices[parseInt(this.props.currentCurrency)].currency.symbol}{\" \"}{data.product.prices[parseInt(this.props.currentCurrency)].amount}*/}\r\n\r\n                                </div>\r\n                                <div className=\"galleryRight\">\r\n\r\n                                    {<button id=\"galleryAddInfoButton\" onClick={() =>{\r\n                                        if (this.props.isAuthenticated !==false) {if (data.stock > 30) {return this.addProductArr()} else {callAlert('success', 'product out of stock!')}} else {callAlert('success', 'You need to login to access!')}\r\n\r\n                                    }}>ADD TO CART\r\n                                    </button>}\r\n                                    <div className=\"galleryAddInfoDescription\">{parse(data.description)}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )} else { return \"Loading...\"}\r\n    }\r\n}\r\n\r\n\r\nexport default ProductPage\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport Link from \"react-router-dom/Link\";\r\n\r\n\r\nclass CartPageOverlay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.closeOverlay = this.closeOverlay.bind(this);\r\n        this.state = {\r\n                    productID: null,\r\n                    data: [],\r\n                    loading: true,\r\n                    category: null,\r\n                    galleryIndex: 1,\r\n                    itemsInCart:[],\r\n                    attributesFull: [],\r\n                    amountToPay: 0,\r\n\r\n            }\r\n    }\r\n\r\n    closeOverlay =() =>{\r\n        this.props.homeContainerChange('homeContainerClosed')\r\n        this.props.overlayChange('overlayClosed')\r\n        this.props.contentChange('content')\r\n    }\r\n\r\n    handlerIncreaseQuantity= (id) =>{this.props.increaseQuantity(id)}\r\n\r\n    handlerDecreaseQuantity= (id) =>{this.props.decreaseQuantity(id)  }\r\n\r\n    handlerCheckout = () => {\r\n        localStorage.removeItem('itemsInCart')\r\n           }\r\n\r\n    quantityCounter=() => {\r\n        let x\r\n        return this.props.itemsInCart.map(res=>x+=res.quantity, x=0).reverse()[0]\r\n    }\r\n\r\n    render() {\r\n        let amountToPay = 0;\r\n        let y\r\n        amountToPay = this.props.itemsInCart.map(res=>y+=res.data.price*res.quantity, y=0).reverse()[0]!== undefined ?\r\n            this.props.itemsInCart.map(res=>y+=res.data.price*res.quantity, y=0).reverse()[0] : 0\r\n        return (\r\n            <div className={this.props.overlay} onClick={this.closeOverlay}>\r\n                <div id=\"shopping-cart\" onClick={e=>e.stopPropagation()}>\r\n                    <div id=\"cart-header\">\r\n                        My Bag, {this.quantityCounter()} items\r\n                    </div>\r\n                        <ul>\r\n                            {this.props.itemsInCart.map((item, index) => (\r\n\r\n                                <li key={index}>\r\n                                    <div className=\"groupContent\">\r\n                                        <div className=\"groupContentImgSC1\">\r\n                                            <div className=\"shoppingCartItemList\">\r\n                                                <div className=\"shoppingCartItemListTextName\">{item.data.brand}</div>\r\n                                                <div className=\"shoppingCartItemListTextName\">{item.data.title}</div>\r\n\r\n                                                <div className=\"shoppingCartItemListTextPrice\">{item.data.price*item.quantity}{' '}{item.itemCurrency}</div>{\" \"}\r\n\r\n\r\n{/*                                                <div className=\"galleryAttributesSC\">\r\n\r\n                                                    <div className=\"caption\">{item.attributesFull.map(\r\n                                                    res=>res.type==='text' && res.id !=='With USB 3 ports' && res.id !=='Touch ID in keyboard' ?\r\n                                                        res.id+\":\": \"\")}</div>\r\n\r\n\r\n                                                    {item.attributesFull.map((item1)=>item1.type==='text' &&\r\n                                                    item1.id !=='With USB 3 ports' && item1.id !=='Touch ID in keyboard' ?\r\n                                                        item1.items.map(item2=>{\r\n                                                            return this.props.itemsInCart.attributesId!==null ?\r\n\r\n                                                                (<div key={item2.id} className={\r\n                                                                      item.attributesId===item2.id ? \"attributesItemSCBlack\" : \"attributesItemSC\"}>\r\n                                                                    <div className=\"attributesItemSCtext\">{item2.value}</div>\r\n                                                                </div>) :\r\n                                                                (<div className=\"attributesItemSC\" key={item2.id}  >\r\n                                                                    <div className=\"attributesItemSCtext\">{item2.value}</div>\r\n                                                                </div>)}) : null) }\r\n                                                    <br/>\r\n                                                </div>*/}\r\n            {/*                                    <div className={item.attributesFull.map((item1)=>item1.items.map(item2=>item2.id!=='Color' ?\r\n                                                    \"galleryAttributesSwatchSCNone\" : \"galleryAttributesSwatchSC\"))}>\r\n\r\n                                                    <div className=\"caption\">{item.attributesFull.map(res=>res.type==='swatch' ?  res.id+\":\": \"\")}</div>\r\n                                                    {item.attributesFull.map((item1, index)=>(item1.type==='swatch') ? item1.items.map(item2=>{\r\n\r\n                                                            return this.props.itemsInCart.attributesSwatch!==null ?\r\n                                                                (<div className=\"attributesItemSwatchSelectedSC\" key={item2.id}\r\n                                                                      style={item.attributesSwatch === item2.id ?\r\n                                                                          {\r\n                                                                              backgroundColor: item2.id,\r\n                                                                              outlineStyle: 'solid',\r\n                                                                              outlineColor: 'lawngreen',\r\n                                                                              outlineOffset: '2px',\r\n                                                                              outlineWidth: '2px'\r\n                                                                          } : {backgroundColor: item2.id}} />) :\r\n                                                                (<div className=\"attributesItemSwatch\"\r\n                                                                      key={item2.id}\r\n                                                                      style={{backgroundColor: item2.id}} >{\"\"}\r\n                                                                </div>)\r\n                                                        }) : null\r\n                                                    )}\r\n                                                    <br/>\r\n                                                </div>*/}\r\n {/*                                               <div className=\"galleryAttributesAdd1SC\">\r\n                                                    <div className={item.attributesFull.length<3 ?\r\n                                                        \"galleryAttributesAdd1SCCaptionNone\" : \"galleryAttributesAdd1SCCaption\"}>\r\n\r\n                                                        {item.attributesFull.map((item1, index)=>\r\n                                                    {if (index === 1) {return item1.id+\":\"}\r\n                                                    else\r\n                                                    {return null\r\n\r\n\r\n                                                    }})}\r\n                                                    </div>\r\n                                                    {item.attributesFull.map((item1, index)=>(item1.id.includes(\"USB\"))  ? item1.items.map(item2=>{\r\n                                                        return this.props.itemsInCart.map(res=>res.attributesAdd1) !==null ?\r\n                                                            (<div key={item2.id} className={item.attributesAdd1===item2.id ?\r\n                                                                \"attributesItemAdd1SCBlack\" : \"attributesItemAdd1SC\"}>\r\n                                                    <div className=\"attributesItemSCtext\">{item2.id}\r\n                                                    </div>\r\n                                                            </div>) : (<div className=\"attributesItemAdd1SC\" key={item2.id}>\r\n                                                                <div className=\"attributesItemSCtext\">{item2.id}</div></div>)}) : null) }\r\n                                                    <br/>\r\n                                                </div>*/}\r\n\r\n{/*                                                <div className=\"galleryAttributesAdd2SC\">\r\n                                                    <div className={item.attributesFull.length<3 ?\r\n                                                        \"galleryAttributesAdd2SCCaptionNone\" : \"galleryAttributesAdd2SCCaption\"}>{item.attributesFull.map((item1, index)=>\r\n                                                    {if (index === 2) {return item1.id+\":\"}\r\n                                                    else\r\n                                                    {return null\r\n\r\n\r\n                                                    }})}</div>\r\n                                                    {item.attributesFull.map((item1, index)=>(item1.id.includes(\"USB\"))\r\n                                                        ? item1.items.map(item2=>{\r\n                                                            return this.props.itemsInCart.map(res=>res.attributesAdd2) !==null ?\r\n                                                                (<div key={item2.id} className={item.attributesAdd2===item2.id ?\r\n                                                                    \"attributesItemAdd2SCBlack\" : \"attributesItemAdd2SC\"}>\r\n                                                                    <div className=\"attributesItemSCtext\">{item2.id}</div>\r\n                                                                </div>) : (<div className=\"attributesItemAdd2SC\" key={item2.id}>\r\n                                                                    <div className=\"attributesItemSCtext\">{item2.id}</div></div>)}) : null) }\r\n                                                    <br/>\r\n                                                </div>*/}\r\n                                            </div></div>\r\n\r\n\r\n                                        <div className=\"groupContentImgSC2\">\r\n                                            <div className=\"plus_minusContentImgSC\">\r\n                                                <div className=\"plusContentImgSC\" onClick={() => {this.handlerIncreaseQuantity({\r\n                                                    indexId: this.props.itemsInCart.length,\r\n                                                    data: item.data,\r\n                                                    quantity: 1,\r\n                                                    imageIndex: 0,\r\n                                                    itemCurrency: this.props.currentCurrency,\r\n                                                    priceForAll: item.data.price,\r\n\r\n                                                })}}>{\"+\"}</div>\r\n                                                <div className=\"countContentImgSC\">\r\n                                                    <span className=\"countContentImgSCNumber\">{this.props.itemsInCart[index].quantity}</span></div>\r\n                                                <div className=\"minusContentImgSC\"\r\n                                                     onClick={() => {this.handlerDecreaseQuantity(\r\n                                                         {\r\n                                                             indexId: this.props.itemsInCart.length,\r\n                                                             data: item.data,\r\n                                                             quantity: 1,\r\n                                                             imageIndex: 0,\r\n                                                             itemCurrency: this.props.currentCurrency,\r\n                                                             priceForAll: item.data.price,\r\n\r\n                                                         })}}>{\"-\"}</div>\r\n                                            </div>\r\n                                            <img className=\"contentImgSC\"\r\n                                                 key={item.id}\r\n                                                 src={item.data.thumbnail}\r\n                                                 alt={\"logo\"}/></div>\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n\r\n                    <div id=\"empty-cart\">{(this.props.itemsInCart.length === 0) ? \"Shopping cart is empty\" : \"\"}</div>\r\n                    <div id=\"totals\">\r\n                        <div className=\"totals1\">\r\n                            <div className=\"totalsText\">{\"Total: \"}</div>\r\n                            <div>{this.props.itemsInCart.map((res, index )=>\r\n                            {if(index===0) return res.currency\r\n                            else\r\n                                return null\r\n                            })}{amountToPay.toFixed(2)}{' '}{(this.props.itemsInCart[0]) ? this.props.itemsInCart[0].itemCurrency : ''}</div>\r\n                        </div>\r\n                        <div className=\"totals2\"><Link to=\"/bag\" className=\"viewLink\"\r\n                                                       onClick={() => {this.handlerOpenMyBag(false)}}>\r\n                            <button id=\"viewBag\"><span className=\"viewBagText\">{\"VIEW BAG\"}</span></button>\r\n                        </Link>\r\n                            <button id=\"checkout\"\r\n                                    className=\"viewLink\"\r\n                                    onClick={() =>  {document.location.reload(localStorage.removeItem('itemsInCart')) }}\r\n                                    disabled={this.props.itemsInCart.length === 0} >\r\n                                <span className=\"checkOutText\">{\"CHECK OUT\"}</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CartPageOverlay","import React from 'react'\r\nimport callAlert from \"../utils/callAlert\";\r\n\r\nclass Bag extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productID: null,\r\n            data: [],\r\n            loading: true,\r\n            category: null,\r\n            itemsInCart: [],\r\n            amountToPay: 0,\r\n            imageIndex: 0,\r\n        }\r\n    }\r\n\r\n    amountToPay = () => {\r\n        let y\r\n        return this.props.itemsInCart.map(res => y += res.price, y = 0).reverse()[0]\r\n    }\r\n\r\n    addCartToOrder = () => {\r\n        let itemsInOrder = JSON.parse(localStorage.getItem('itemsInOrder') || \"[]\")\r\n        let itemInOrder = [...this.props.itemsInCart]\r\n        itemsInOrder.push(itemInOrder)\r\n        this.props.sendToOrder(itemsInOrder)\r\n    }\r\n\r\n    arrowRight = (index) => {\r\n        this.props.bagArrowRight(index)\r\n    }\r\n\r\n    arrowLeft = (index) => {\r\n        this.props.bagArrowLeft(index)\r\n    }\r\n\r\n    handlerIncreaseQuantity = (index) => {\r\n        this.props.increaseQuantity(index)\r\n    }\r\n\r\n    handlerDecreaseQuantity = (index) => {\r\n        this.props.decreaseQuantity(index)\r\n    }\r\n\r\n\r\n    quantityCounter = () => {\r\n        let x\r\n        return this.props.itemsInCart.map(res => x += res.quantity, x = 0).reverse()[0]\r\n    }\r\n\r\n    updateAmountToPay() {\r\n        this.forceUpdate();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let amountToPay = 0;\r\n        let y\r\n        amountToPay = this.props.itemsInCart.map(res=>y+=res.data.price*res.quantity, y=0).reverse()[0]!== undefined ?\r\n            this.props.itemsInCart.map(res=>y+=res.data.price*res.quantity, y=0).reverse()[0] : 0\r\n\r\n\r\n        if (this.props.itemsInCart.length===0) {\r\n            return (<div id=\"empty\">{'SHOPPING CART IS EMPTY!'}</div>)\r\n\r\n\r\n        } else {\r\n            return (<div id=\"cart-bag\">\r\n                <div id=\"cartBag-header\">\r\n                    <span id=\"cartBag-title\">{'CART'}</span><br/>\r\n                    <div className=\"bagUnderline\"></div>\r\n                </div>\r\n\r\n                <ul>\r\n                    {this.props.itemsInCart.map((item, index) => (\r\n                        <li key={index}>\r\n                            <div className=\"groupContentBag\">\r\n                                <div className=\"groupContentImgBag1\">\r\n                                    <div className=\"shoppingCartItemList\">\r\n                                        <div className=\"shoppingCartItemListNameBagText\">{item.data.brand}</div>\r\n                                        <div className=\"shoppingCartItemListNameBagText\">{item.data.title}</div>\r\n                                        <span className=\"shoppingCartItemListPriceBagText\">\r\n        {(this.props.itemsInCart[0]) ? this.props.itemsInCart[0].itemCurrency : ''}{item.data.price}</span>\r\n{/*                                        <div className=\"galleryAttributesBag\">\r\n                                            <div className=\"captionBag1\">{item.attributesFull.map(\r\n                                                res=>res.type==='text' && res.id !=='With USB 3 ports' && res.id !=='Touch ID in keyboard' ?\r\n                                                    res.id+\":\": \"\")}</div>\r\n                                            {item.attributesFull.map((item1)=>item1.type==='text' &&\r\n                                            item1.id !=='With USB 3 ports' && item1.id !=='Touch ID in keyboard' ?\r\n                                                item1.items.map(item2=>{\r\n                                                    return this.props.itemsInCart.attributesId!==null ?\r\n\r\n                                                        (<div key={item2.id} className={\r\n                                                            item.attributesId===item2.id ? \"attributesItemBagBlack\" : \"attributesItemBag\"}>\r\n                                                            <div className=\"attributesItemBagText\">{item2.value}</div>\r\n                                                        </div>) :\r\n                                                        (<div className=\"attributesItemBag\" key={item2.id}  >\r\n                                                            <div className=\"attributesItemBagText\">{item2.value}</div>\r\n                                                        </div>)}) : null) }\r\n                                        </div>*/}\r\n\r\n{/*                                        <div className={item.attributesFull.map((item1)=>item1.items.map(item2=>item2.id!=='Color' ?\r\n                                            \"galleryAttributesSwatchBagNone\" : \"galleryAttributesSwatchBag\"))}>\r\n                                            <div\r\n                                                className=\"captionBag2\">{item.attributesFull.map(res => res.type === 'swatch' ? res.id+\":\" : \"\")}{\" \"}</div>\r\n                                            {item.attributesFull.map((item1, index) => (item1.type === 'swatch') ? item1.items.map(item2 => {\r\n\r\n                                                    return this.props.itemsInCart.attributesSwatch !== null ?\r\n                                                        (<div className=\"attributesItemSwatchSelectedBag\" key={item2.id}\r\n                                                              style={item.attributesSwatch === item2.id ?\r\n                                                                  {\r\n                                                                      backgroundColor: item2.id,\r\n                                                                      outlineStyle: 'solid',\r\n                                                                      outlineColor: 'lawngreen',\r\n                                                                      outlineOffset: '2px',\r\n                                                                      outlineWidth: '2px'\r\n                                                                  } : {backgroundColor: item2.id}}/>) :\r\n                                                        (<div className=\"attributesItemSwatch\" key={item2.id}\r\n                                                              style={{backgroundColor: item2.id}}>{\"\"}</div>)\r\n                                                }) : null\r\n                                            )}\r\n                                        </div>*/}\r\n\r\n{/*                                        <div className=\"galleryAttributesAdd1Bag\">\r\n                                            <div className={item.attributesFull.length<3 ?\r\n                                                \"galleryAttributesAdd1BagCaptionNone\" : \"galleryAttributesAdd1BagCaption\"}>\r\n\r\n                                                {item.attributesFull.map((item1, index)=>\r\n                                                {if (index === 1) {return item1.id+\":\"}\r\n                                                else\r\n                                                {return null\r\n\r\n\r\n                                                }})}\r\n                                            </div>\r\n                                            {item.attributesFull.map((item1, index)=>(item1.id.includes(\"USB\"))  ? item1.items.map(item2=>{\r\n                                                return this.props.itemsInCart.map(res=>res.attributesAdd1) !==null ?\r\n                                                    (<div key={item2.id} className={item.attributesAdd1===item2.id ?\r\n                                                        \"attributesItemAdd1BagBlack\" : \"attributesItemAdd1Bag\"}>\r\n                                                        <div className=\"attributesItemBagText\">{item2.id}\r\n                                                        </div>\r\n                                                    </div>) : (<div className=\"attributesItemAdd1Bag\" key={item2.id}>\r\n                                                        <div className=\"attributesItemBagText\">{item2.id}</div></div>)}) : null) }\r\n                                        </div>*/}\r\n\r\n{/*                                        <div className=\"galleryAttributesAdd2Bag\">\r\n                                            <div className=\"galleryAttributesAdd2BagCaption\" style={item.attributesAdd2===null ?\r\n                                                {display:'none'} : {}}>{item.attributesFull.map((item1, index)=>\r\n                                            {if (index === 2) {return item1.id+\":\"}\r\n                                            else\r\n                                            {return null\r\n\r\n\r\n                                            }})}</div>\r\n                                            {item.attributesFull.map((item1, index)=>(item1.id.includes(\"USB\"))\r\n                                                ? item1.items.map(item2=>{\r\n                                                    return this.props.itemsInCart.map(res=>res.attributesAdd2) !==null ?\r\n                                                        (<div key={item2.id} className={item.attributesAdd2===item2.id ?\r\n                                                            \"attributesItemAdd2BagBlack\" : \"attributesItemAdd2Bag\"}>\r\n                                                            <div className=\"attributesItemBagText\">{item2.id}</div>\r\n                                                        </div>) : (<div className=\"attributesItemAdd2Bag\" key={item2.id}>\r\n                                                            <div className=\"attributesItemBagText\">{item2.id}</div></div>)}) : null) }\r\n                                        </div>*/}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"groupContentImgBag2\">\r\n                                    <div className=\"plus_minusContentImgBag\">\r\n                                        <div className=\"plusContentImgBag\" onClick={() => {\r\n                                            this.handlerIncreaseQuantity({\r\n                                                indexId: this.props.itemsInCart.length,\r\n                                                data: item.data,\r\n                                                quantity: 1,\r\n                                                imageIndex: 0,\r\n                                                itemCurrency: this.props.currentCurrency,\r\n                                                priceForAll: item.data.price,\r\n                                            })\r\n                                        }}>\r\n        <span className=\"plusSvg\"><svg width=\"25\" height=\"25\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <rect fill=\"white\" height=\"22\" id=\"svg_1\" width=\"20\" x=\"3\" y=\"2\"/>\r\n        <path d=\"m13.5,5l0,15\" id=\"svg_2\" stroke=\"#1D1F22\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n        <path d=\"m6,12.5l15,0\" id=\"svg_3\" stroke=\"#1D1F22\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n        </svg></span>\r\n                                        </div>\r\n                                        <div\r\n                                            className=\"countContentImgBag\">{this.props.itemsInCart[index].quantity}</div>\r\n                                        <div className=\"minusContentImgBag\"\r\n                                             onClick={() => {\r\n                                            this.handlerDecreaseQuantity(\r\n                                                {\r\n                                                    indexId: this.props.itemsInCart.length,\r\n                                                    data: item.data,\r\n                                                    quantity: 1,\r\n                                                    imageIndex: 0,\r\n                                                    itemCurrency: this.props.currentCurrency,\r\n                                                    priceForAll: item.data.price,\r\n                                                })\r\n                                        }}>\r\n        <span className=\"minusSvg\">\r\n            <svg width=\"17\" height=\"1\" viewBox=\"0 0 17 1\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M1 0.5H16\" stroke=\"#1D1F22\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n        </svg></span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <img className=\"contentImgBag\"\r\n                                         key={item.id}\r\n                                         src={item.data.images[item.imageIndex]}\r\n                                         alt={\"logo\"}/>\r\n                                    <div onClick={() => {\r\n                                        this.arrowLeft(\r\n                                            { indexId: this.props.itemsInCart[index].indexId,\r\n                                                id: this.props.itemsInCart[index].id,\r\n                                                name: this.props.itemsInCart[index].name,\r\n                                                brand: this.props.itemsInCart[index].brand,\r\n                                                gallery: this.props.itemsInCart[index].gallery,\r\n                                                prices: this.props.itemsInCart[index].prices,\r\n                                                attributesFull: this.props.itemsInCart[index].attributesFull,\r\n                                                currency: this.props.itemsInCart[index].currency,\r\n                                                price: this.props.itemsInCart[index].price * this.props.itemsInCart[index].quantity,\r\n                                                image: this.props.itemsInCart[index].image,\r\n                                                priceForOne: this.props.itemsInCart[index].price,\r\n                                            })\r\n                                    }} className={item.data.images.length > 1 ? \"bagArrowLeftImage\" : \"bagArrowImageNone\"}>\r\n                                        <svg className=\"bagArrow\" width=\"8\" height=\"14\" viewBox=\"0 0 8 14\"\r\n                                             fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M7.25 1.06857L1.625 6.6876L7.25 12.3066\"\r\n                                                  stroke=\"white\" strokeWidth=\"1.5\" strokeLinecap=\"round\"\r\n                                                  strokeLinejoin=\"round\"/>\r\n                                        </svg>\r\n                                    </div>\r\n                                    <div onClick={() => {\r\n                                        this.arrowRight(\r\n                                            { indexId: this.props.itemsInCart[index].indexId,\r\n                                                id: this.props.itemsInCart[index].id,\r\n                                                name: this.props.itemsInCart[index].name,\r\n                                                brand: this.props.itemsInCart[index].brand,\r\n                                                gallery: this.props.itemsInCart[index].gallery,\r\n                                                prices: this.props.itemsInCart[index].prices,\r\n                                                attributesFull: this.props.itemsInCart[index].attributesFull,\r\n                                                currency: this.props.itemsInCart[index].currency,\r\n                                                price: this.props.itemsInCart[index].price * this.props.itemsInCart[index].quantity,\r\n                                                image: this.props.itemsInCart[index].image,\r\n                                                priceForOne: this.props.itemsInCart[index].price,\r\n                                            })\r\n                                    }}\r\n                                         className={item.data.images.length > 1 ? \"bagArrowRightImage\" : \"bagArrowRightImageNone\"}>\r\n                                        <svg className=\"bagArrow\" width=\"8\" height=\"14\" viewBox=\"0 0 8 14\"\r\n                                             fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M0.75 1.06808L6.375 6.68711L0.75 12.3062\" stroke=\"white\"\r\n                                                  strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                        </svg>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"bagUnderline\"></div>\r\n                        </li>\r\n\r\n                    ))}\r\n                </ul>\r\n\r\n                <div id=\"empty-cart\">{(this.props.itemsInCart.length === 0) ? \"Shopping cart is empty\" : \"\"}</div>\r\n\r\n\r\n                <div id=\"bagTotals\">\r\n                    <div id=\"bagTax\">{'Tax 21%: '}<div className=\"totalsBagFont\">\r\n                        {(this.props.itemsInCart[0]) ? this.props.itemsInCart[0].itemCurrency : ''}\r\n                        {(amountToPay * 21 / 100).toFixed(2)}</div>\r\n                    </div>\r\n                    <div id=\"bagQuantity\">{'Quantity: '}\r\n                    <div className=\"totalsBagFont\">{this.quantityCounter()}</div>\r\n                    </div>\r\n                    <div id=\"bagTotalSum\">\r\n                        <span id=\"bagTotalName\">{'Total: '}</span>\r\n                        <span className=\"totalsBagFont\">\r\n        {(this.props.itemsInCart[0]) ? this.props.itemsInCart[0].itemCurrency : ''}\r\n                            {amountToPay.toFixed(2)}</span>\r\n                    </div>\r\n                    <button id=\"bagOrderButton\"\r\n                            onClick={() => {\r\n                                this.addCartToOrder();\r\n                                localStorage.removeItem('itemsInCart')\r\n                                callAlert('success', 'your order put in process!')\r\n                            }}>{'ORDER'}</button>\r\n\r\n                </div>\r\n\r\n            </div>)\r\n        }\r\n    }\r\n}\r\nexport default Bag\r\n","import React from 'react';\nimport './App.scss'\nimport './utils/callAlert.css';\nimport Alert from 'react-s-alert';\nimport Header from './components/Header';\nimport CategoryPage from './components/Ð¡ategoryPage';\nimport ProductPage from \"./components/ProductPage\";\nimport CartPageOverlay from \"./components/CartPageOverlay\";\nimport Bag from \"./components/Bag\";\nimport { Route, Switch } from 'react-router-dom';\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.addToCart = this.addToCart.bind(this);\n        this.updateUpCurrency = this.updateUpCurrency.bind(this);\n        this.state = {\n            isAuthenticated: localStorage.getItem('isAuthenticated') === null ? false : localStorage.getItem('isAuthenticated'),\n            user: localStorage.getItem('user') === null ? null : localStorage.getItem('user'),\n            data: null,\n            loading: true,\n            categoryName: localStorage.getItem('categoryName') === null ? '' : localStorage.getItem('categoryName'),\n            productID: localStorage.getItem('productID') === null ? 0 : localStorage.getItem('productID'),\n            galleryIndex: 1,\n            currentCurrency: localStorage.getItem('currentCurrency') === null ? 0 : localStorage.getItem('currentCurrency'),\n            items: [],\n            amountToPay: null,\n            itemsInCart: JSON.parse(localStorage.getItem('itemsInCart')) === null ? [] : JSON.parse(localStorage.getItem('itemsInCart')),\n            itemsInOrder: [],\n            homeContainerState: 'homeContainerClosed',\n            overlay: 'overlayClosed',\n            contentState: 'content',\n            currencies: [{id:0, label: 'USD', symbol: '$'},{id:1, label: 'GBP', symbol: 'Â£'},{id:2, label: 'AUD', symbol: 'A$'},\n                {id:3, label: 'JPY', symbol: 'Â¥'},{id:4, label: 'RUB', symbol: 'â½'}]\n        }\n    }\n\n    signInObserver = (isAuth, user) => {\n        if (isAuth) {\n            console.log(user)\n            this.setState({ isAuthenticated: true, user: user })\n            localStorage.setItem('user', user);\n            localStorage.setItem('isAuthenticated', isAuth);\n        } else {\n            this.setState({ isAuthenticated: false });\n        }\n    }\n\n\n\n    addToCart = (arr) => {\n        console.log(arr)\n        const updatedCart = [...this.state.itemsInCart];//copying an array of products in the cart\n        const updatedItemIndex = updatedCart.findIndex(res => res.data.title // check if there is the same product in the cart\n             === arr.data.title );\n        console.log(updatedCart)\n        console.log(updatedItemIndex)\n        if (updatedItemIndex === -1)//if the same product is not found, then this product added to the cart and to the localstorage\n        {\n            this.setState({itemsInCart: [...this.state.itemsInCart, arr]});\n            localStorage.setItem('itemsInCart', JSON.stringify([...this.state.itemsInCart, arr]))\n        } else {\n            const updatedItem = {\n                ...updatedCart[updatedItemIndex]//if the same product is found, the variable is set\n            };\n/*            const updatedPriceIndex = this.state.itemsInCart.findIndex(item => item.id === arr.id)// find the id for prices in the array from the database\n            const updatedPrice = this.state.itemsInCart[updatedPriceIndex].price.map(price => {\n                if (price.currency.symbol) return price.amount\n                else\n                    return null\n            })// price should be displayed in the current currency\n            function compareNumeric(a, b) {\n                if (a > b) return 1;\n                if (a === b) return 0;\n                if (a < b) return -1;\n            }// sorting the array in ascending order so that the resulting price in the corresponding currency is under the index 0*/\n            updatedItem.quantity++;//if the same product is found, increase the quantity of product by one\n            /*updatedItem.data.price = updatedItem.data.price * updatedItem.quantity;// total cost = price with sorting * quantity*/\n            updatedCart[updatedItemIndex] = updatedItem;//replacing an element with a new value\n            this.setState(prevState => ({...prevState, itemsInCart: updatedCart})); //cart and localstorage updating\n            (localStorage.setItem('itemsInCart', JSON.stringify([...this.state.itemsInCart])));\n        }\n\n    }\n\n    bagArrowRight = (index) => {\n        const updatedCart = [...this.state.itemsInCart];\n        const updatedItemIndex = updatedCart.findIndex(res => res.indexId === index.indexId);\n        if (updatedItemIndex < 0) {\n            updatedCart.push({...index, imageIndex: 0});\n        } else {\n            const updatedItem = {\n                ...updatedCart[updatedItemIndex]\n            };\n            const imgControl = updatedItem.data.images.length\n            if (updatedItem.imageIndex < (imgControl - 1)) {\n                updatedItem.imageIndex++\n            } else {\n                updatedItem.imageIndex = 0\n            }\n            updatedCart[updatedItemIndex] = updatedItem;\n        }\n        setTimeout(() => {\n            this.setState(prevState => ({...prevState, itemsInCart: updatedCart}));\n        }, 300);\n    };\n\n    bagArrowLeft = (index) => {\n        const updatedCart = [...this.state.itemsInCart];\n        const updatedItemIndex = updatedCart.findIndex(res => res.indexId === index.indexId);\n        if (updatedItemIndex < 0) {\n            updatedCart.push({...index, imageIndex: 0});\n        } else {\n            const updatedItem = {\n                ...updatedCart[updatedItemIndex]\n            };\n            if (updatedItem.imageIndex < (1)) {\n                updatedItem.imageIndex = 0\n            } else {\n                updatedItem.imageIndex--\n            }\n            updatedCart[updatedItemIndex] = updatedItem;\n        }\n        setTimeout(() => {\n            this.setState(prevState => ({...prevState, itemsInCart: updatedCart}));\n        }, 300);\n    };\n\n    sendToOrder = (value) => {\n        this.setState({itemsInOrder: [...this.state.itemsInOrder, value]});\n    }\n\n    increaseQuantity = (dataId) => {\n        console.log(dataId)\n        const updatedCart = [...this.state.itemsInCart];//copying an array of products in the cart\n        const updatedItemIndex = updatedCart.findIndex(res => res.data.title // check if there is the same product in the cart\n            === dataId.data.title );\n        console.log(updatedCart)\n        console.log(updatedItemIndex)\n        if (updatedItemIndex === -1)//if the same product is not found, then this product added to the cart and to the localstorage\n        {\n            this.setState({itemsInCart: [...this.state.itemsInCart, dataId]});\n            localStorage.setItem('itemsInCart', JSON.stringify([...this.state.itemsInCart, dataId]))\n        } else {\n            const updatedItem = {\n                ...updatedCart[updatedItemIndex]//if the same product is found, the variable is set\n            };\n            /*            const updatedPriceIndex = this.state.itemsInCart.findIndex(item => item.id === arr.id)// find the id for prices in the array from the database\n                        const updatedPrice = this.state.itemsInCart[updatedPriceIndex].price.map(price => {\n                            if (price.currency.symbol) return price.amount\n                            else\n                                return null\n                        })// price should be displayed in the current currency\n                        function compareNumeric(a, b) {\n                            if (a > b) return 1;\n                            if (a === b) return 0;\n                            if (a < b) return -1;\n                        }// sorting the array in ascending order so that the resulting price in the corresponding currency is under the index 0*/\n            updatedItem.quantity++;//if the same product is found, increase the quantity of product by one\n            /*updatedItem.data.price = updatedItem.data.price * updatedItem.quantity;// total cost = price with sorting * quantity*/\n            updatedCart[updatedItemIndex] = updatedItem;//replacing an element with a new value\n            this.setState(prevState => ({...prevState, itemsInCart: updatedCart})); //cart and localstorage updating\n            (localStorage.setItem('itemsInCart', JSON.stringify([...this.state.itemsInCart])));\n        }\n    };\n\n    decreaseQuantity = (index) => {\n        const updatedCart = [...this.state.itemsInCart];\n        console.log(updatedCart)\n        updatedCart.findIndex(res => console.log(res.data.id))\n        const updatedItemIndex = updatedCart.findIndex(res => res.data.id === index.data.id);\n        const updatedItem = {\n            ...updatedCart[updatedItemIndex]\n        };\n        console.log(updatedItemIndex)\n        console.log(updatedItem)\n\n        updatedItem.quantity--;\n        if (updatedItem.quantity <= 0) {\n            updatedCart.splice(updatedItemIndex, 1);\n        } else {\n            updatedCart[updatedItemIndex] = updatedItem;\n            updatedItem.priceForAll = updatedItem.priceForAll-updatedItem.data.price;\n        }\n        setTimeout(() => {\n            this.setState(prevState => ({...prevState, itemsInCart: updatedCart}));\n        }, 300);\n\n        setTimeout(() => {\n            (localStorage.setItem('itemsInCart', JSON.stringify([...this.state.itemsInCart])));\n        }, 300);\n    };\n\n    showProduct = (value) => {\n        console.log(value)\n         this.setState({productID: value})\n        localStorage.setItem('productID', value)\n    }\n\n    updateUpCurrency = async (value) => {\n      this.setState({currentCurrency: value})// value from header number 0-4\n       localStorage.setItem('currentCurrency', (value))\n      /*  const updatedItems = this.state.itemsInCart.filter(res => this.state.itemsInCart.map(item => item.id.includes(res.id)))\n//copying an array of products in the cart\n        console.log(updatedItems)\n\n        for (let i = 0; i < updatedItems.length; i++) {\n            updatedItems[i].currency = updatedItems[i].prices[value].currency.symbol\n            console.log(updatedItems[i].currency)\n            const updatedPriceIndex = this.state.itemsInCart.findIndex(item => item.id === updatedItems[i].id)\n            console.log(updatedPriceIndex)\n            updatedItems[i].priceForOne = this.state.itemsInCart.findIndex(item => item.id === updatedItems[i].id)\n            const updatedPrice = this.state.itemsInCart[i].prices.map(item => {\n                if (item.currency.symbol === updatedItems[i].currency) return item.amount\n                else\n                    return console.log(item.amount) //dummy return, needed for the function to work correctly\n            })\n\n            function compareNumeric(a, b) {\n                if (a > b) return 1;\n                if (a === b) return 0;\n                if (a < b) return -1;\n            }\n            console.log(updatedPrice)\n            updatedItems[i].currency = updatedItems[i].prices[value].currency.symbol\n            updatedItems[i].price = updatedPrice.sort(compareNumeric)[0] * updatedItems[i].quantity;\n            updatedItems[i].priceForOne = updatedPrice.sort(compareNumeric)[0]\n                 }\n\n        this.setState(prevState => ({...prevState, itemsInCart: updatedItems}));\n\n        (localStorage.setItem('itemsInCart', JSON.stringify([...this.state.itemsInCart])));*/\n\n    }\n\n\n    updateDataName = (value) => {\n        this.setState({categoryName: value})\n        localStorage.setItem('categoryName', value)\n    }\n\n    updateGallery = (index) => {\n        this.setState({galleryIndex: index})\n    }\n\n\n    homeContainerChange=(value)=> {\n        this.setState({homeContainerState: value})\n    }\n\n    overlayChange=(value)=> {\n        this.setState({overlay: value})\n    }\n\n    contentChange=(value)=> {\n        this.setState({contentState: value})\n    }\n\n    render() {\n\n\n                return (\n                    <div className={this.state.homeContainerState}>\n                        <Header\n                            updateDataName={this.updateDataName}\n                            isAuthenticated={this.state.isAuthenticated}\n                            data1={this.state}\n                            updateUpCurrency={this.updateUpCurrency}\n                            quantity={this.state.quantity}\n                            amountToPay={this.state.amountToPay}\n                            itemsInCart={this.state.itemsInCart}\n                            currentCurrency={this.state.currentCurrency}\n                            homeContainerChange={this.homeContainerChange}\n                            overlayChange={this.overlayChange}\n                            contentChange={this.contentChange}\n                            overlay={this.state.overlay}\n                            contentState={this.state.contentState}\n                            currencies={this.state.currencies}\n                            itemsInOrder={this.state.itemsInOrder}\n                            signInObserver={this.signInObserver}\n                            user={this.state.user}\n                        />\n                        <Switch>\n                            <Route exact path={[`/${localStorage.getItem('categoryName') === null ?\n                                this.state.categoryName : localStorage.getItem('categoryName')}`, '']} render={() =>\n                                <CategoryPage\n                                    categoryName={this.state.categoryName}\n                                    isAuthenticated={this.state.isAuthenticated}\n                                    showProduct={this.showProduct}\n                                    currentCurrency={this.state.currentCurrency}\n                                    addToCart={this.addToCart}\n                                    productID={this.state.productID}\n                                    itemsInCart={this.state.itemsInCart}\n                                    contentState={this.state.contentState}\n                                    currencies={this.state.currencies}\n                                />\n                            }\n                            />\n\n                            <Route path={`/product/${localStorage.getItem('productID')}`} render={() =>\n                                <ProductPage\n                                    updateGallery={this.updateGallery}\n                                    productID={this.state.productID}\n                                    currentCurrency={this.state.currentCurrency}\n                                    updateAttributesItemId={this.updateAttributesItemId}\n                                    updateAttributesItemIdSwatch={this.updateAttributesItemIdSwatch}\n                                    addToCart={this.addToCart}\n                                    updateAttributesItemIdAdd1={this.updateAttributesItemIdAdd1}\n                                    updateAttributesItemIdAdd2={this.updateAttributesItemIdAdd2}\n                                    itemsInCart={this.state.itemsInCart}\n                                    showProduct={this.showProduct}\n                                    galleryIndex={this.state.galleryIndex}\n                                    currencies={this.state.currencies}\n                                    user={this.state.user}\n                                    isAuthenticated={this.state.isAuthenticated}\n                                />\n                            }\n                            />\n\n                            <Route path=\"/bag\" render={() =>\n                                <Bag\n                                    data={this.state}\n                                    itemsInCart={this.state.itemsInCart}\n                                    itemsInOrder={this.state.itemsInOrder}\n                                    sendToOrder={this.sendToOrder}\n                                    updateGallery={this.updateGallery}\n                                    productID={this.state.productID}\n                                    currentCurrency={this.state.currentCurrency}\n                                    updateAttributesItemId={this.updateAttributesItemId}\n                                    updateAttributesItemIdSwatch={this.updateAttributesItemIdSwatch}\n                                    addToCart={this.addToCart} items={this.state.items}\n                                    increaseQuantity={this.increaseQuantity}\n                                    decreaseQuantity={this.decreaseQuantity}\n                                    updateAttributesItemIdAdd1={this.updateAttributesItemIdAdd1}\n                                    updateAttributesItemIdAdd2={this.updateAttributesItemIdAdd2}\n                                    attributesItemIdAdd1={this.state.attributesItemIdAdd1}\n                                    attributesItemIdAdd2={this.state.attributesItemIdAdd2}\n                                    amountToPay={this.state.amountToPay}\n                                    bagArrowRight={this.bagArrowRight}\n                                    bagArrowLeft={this.bagArrowLeft}\n                                    currencies={this.state.currencies}\n                                />\n                            }\n                            />\n                        </Switch>\n\n\n                        <CartPageOverlay\n                            data={this.state}\n                            itemsInCart={this.state.itemsInCart}\n                            updateGallery={this.updateGallery}\n                            productID={this.state.productID}\n                            currentCurrency={this.state.currentCurrency}\n                            updateAttributesItemId={this.updateAttributesItemId}\n                            updateAttributesItemIdSwatch={this.updateAttributesItemIdSwatch}\n                            addToCart={this.addToCart} items={this.state.items}\n                            increaseQuantity={this.increaseQuantity}\n                            decreaseQuantity={this.decreaseQuantity}\n                            updateAttributesItemIdAdd1={this.updateAttributesItemIdAdd1}\n                            updateAttributesItemIdAdd2={this.updateAttributesItemIdAdd2}\n                            attributesItemIdAdd1={this.state.attributesItemIdAdd1}\n                            attributesItemIdAdd2={this.state.attributesItemIdAdd2}\n                            amountToPay={this.state.amountToPay}\n                            homeContainerChange={this.homeContainerChange}\n                            overlay={this.state.overlay}\n                            overlayChange={this.overlayChange}\n                            contentChange={this.contentChange}\n                            contentState={this.state.contentState}\n                            currencies={this.state.currencies}\n                            user={this.state.user}\n                            isAuthenticated={this.state.isAuthenticated}\n                        />\n                        <Alert stack={{ limit: 5, spacing: 10 }} offset={40} />\n                        </div>\n                )\n            }\n\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport 'semantic-ui-css/semantic.min.css';\n\nconst customHistory = createBrowserHistory();\n\n\nReactDOM.render(\n\n<Router history={customHistory}>\n        <App />\n</Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}